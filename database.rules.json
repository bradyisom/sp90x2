{
  "rules": {
    "users": {
      "$user_id": {
        ".read": "auth != null && auth.uid == $user_id",
        ".write": "(auth != null && auth.uid == $user_id) || !data.exists()",
        ".validate": "newData.hasChildren(['uid'])",
        "uid": {
          ".validate": "newData.val() == $user_id"
        },
        "displayName": {
          ".validate": "newData.isString()"
        },
        "firstName": {
          ".validate": "newData.isString()"
        },
        "lastName": {
          ".validate": "newData.isString()"
        },
        "email": {
          ".validate": "newData.isString()"
        },
        "avatar": {
          ".validate": "newData.isString()"
        },
        "isAdmin": {
          ".validate": "newData.isBoolean()"
        },
        "schedules": {
          "$schedule_id": {
            ".validate": "root.child('schedules/' + $user_id).hasChild($schedule_id) && newData.isBoolean()"
          }
        },
        "groups": {
          "$group_id": {
            ".validate": "root.child('groups').hasChild($group_id) && newData.isBoolean()"
          }
        }
      }
    },
    "groups": {
      ".read": true,
      ".indexOn": "owner",
      "$group_id": {
        ".write": "auth != null && ((data.exists() && data.child('owner').val() == auth.uid) || (!data.exists() && newData.child('owner').val() == auth.uid))",
        ".validate": "newData.hasChildren(['name', 'description', 'owner', 'public', 'imageUrl'])",
        "name": {
          ".validate": "newData.isString()"
        },
        "description": {
          ".validate": "newData.isString()"
        },
        "owner": {
          ".validate": "newData.isString()"
        },
        "public": {
          ".validate": "newData.isBoolean()"
        },
        "startDate": {
          ".validate": "newData.isString()"
        },
        "endDate": {
          ".validate": "newData.isString()"
        },
        "imageUrl": {
          ".validate": "newData.isString()"
        },
        "schedule": {
          ".validate": "newData.isString()"
        },
        "programTitle": {
          ".validate": "newData.isString()"
        },
        "program": {
          ".validate": "root.child('programs').hasChild(newData.val())"
        },
        "tasks": {
          "$task_id": {
            ".validate": "root.child('tasks').hasChild($task_id) && newData.val().matches(/^(daily|weekly|monthly|((Mo|Tu|We|Th|Fr|Sa|Su)(,(Mo|Tu|We|Th|Fr|Sa|Su))*))$/)"
          }
        }
      }
    },
    "groupUsers": {
      "$group_id": {
        ".read": "auth != null && root.child('groups').hasChild($group_id) && (root.child('groups').child($group_id).child('owner').val() === auth.uid || root.child('groups').child($group_id).child('public').val() === true)",
        ".write": "auth != null && root.child('groups').hasChild($group_id) && root.child('groups').child($group_id).child('owner').val() === auth.uid",
        "$user_id": {
          ".write": "auth != null && (($user_id == auth.uid && root.child('groups').child($group_id).child('public').val() === true) || root.child('groups').child($group_id).child('owner').val() === auth.uid)",
          ".validate": "newData.hasChildren(['displayName', 'email', 'avatar'])",
          "displayName": {
            ".validate": "newData.isString()"
          },
          "email": {
            ".validate": "newData.isString()"
          },
          "avatar": {
            ".validate": "newData.isString()"
          },
          "schedule": {
            ".validate": "root.child('schedules/' + $user_id).hasChild(newData.val())"
          },
          "points": {
            ".validate": "newData.isNumber()"
          },
          "pointsPossible": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },
    "groupMessages": {
      "$group_id": {
        ".read": "auth != null && root.child('groupUsers').child($group_id).hasChild(auth.uid)",
        "$message_id": {
          ".write": "auth != null && ((data.exists() && data.child('userId').val() == auth.uid) || (!data.exists() && newData.child('userId').val() == auth.uid))",
          ".validate": "newData.hasChildren(['userId', 'avatar', 'displayName', 'message'])",
          "userId": {
            ".validate": "newData.val() == auth.uid"
          },
          "avatar": {
            ".validate": "newData.isString()"
          },
          "displayName": {
            ".validate": "newData.isString()"
          },
          "date": {
          },
          "message": {
            ".validate": "newData.isString()"
          }
        }
      }
    },
    "tasks": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true",
      "$task_id": {
        ".validate": "newData.hasChildren(['title', 'description', 'points', 'defaultInterval'])",
        "title": {
          ".validate": "newData.isString()"
        },
        "description": {
          ".validate": "newData.isString()"
        },
        "points": {
          ".validate": "newData.isNumber()"
        },
        "defaultInterval": {
          ".validate": "newData.val().matches(/^(daily|weekly|monthly|((Mo|Tu|We|Th|Fr|Sa|Su)(,(Mo|Tu|We|Th|Fr|Sa|Su))*))$/)"
        }
      }
    },
    "subTasks": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true",
      "$task_id": {
        "$subTask_order": {
          ".validate": "newData.hasChildren(['title'])",
          "link": {
            ".validate": "newData.isString()"
          },
          "title": {
            ".validate": "newData.isString()"
          }
        }
      }
    },
    "programs": {
      ".read": true,
      "$program_id": {
        ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() === true",
        "title": {
          ".validate": "newData.isString()"
        },
        "description": {
          ".validate": "newData.isString()"
        },
        "tasks": {
          "$task_id": {
            ".validate": "root.child('tasks').hasChild($task_id) && newData.val().matches(/^(daily|weekly|monthly|((Mo|Tu|We|Th|Fr|Sa|Su)(,(Mo|Tu|We|Th|Fr|Sa|Su))*))$/)"
          }
        }
      }
    },
    "schedules": {
      "$user_id": {
        ".read": "auth != null && $user_id == auth.uid",
        ".write": "auth != null && $user_id == auth.uid",
        "$schedule_id": {
          ".validate": "newData.hasChildren(['programTitle', 'program', 'tasks', 'startDate', 'endDate'])",
          "programTitle": {
            ".validate": "newData.isString()"
          },
          "program": {
            ".validate": "root.child('programs').hasChild(newData.val())"
          },
          "tasks": {
            "$task_id": {
              ".validate": "root.child('tasks').hasChild($task_id) && newData.val().matches(/^(daily|weekly|monthly|((Mo|Tu|We|Th|Fr|Sa|Su)(,(Mo|Tu|We|Th|Fr|Sa|Su))*))$/)"
            }
          },
          "startDate": {
            ".validate": "newData.isString()"
          },
          "endDate": {
            ".validate": "newData.isString()"
          },
          "group": {
            ".validate": "root.child('groups/' + newData.val()).exists()"
          },
          "points": {
            ".validate": "newData.isNumber()"
          },
          "pointsPossible": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },
    "entries": {
      "$schedule_id": {
        ".read": "auth != null && root.child('schedules/' + auth.uid).hasChild($schedule_id)",
        ".write": "auth != null && root.child('schedules/' + auth.uid).hasChild($schedule_id)",
        "daily": {
          "$date": {
            "$task_id": {
              "finished": {
                ".validate": "newData.isBoolean()"
              }
            }
          }
        },
        "weekly": {
          "$date": {
            "$task_id": {
              "finished": {
                ".validate": "newData.isBoolean()"
              }
            }
          }
        },
        "monthly": {
          "$date": {
            "$task_id": {
              "finished": {
                ".validate": "newData.isBoolean()"
              }
            }
          }
        },
        "fitTest": {
          "$date": {
            "points": {
              ".validate": "newData.isNumber()"
            },
            "pointsPossible": {
              ".validate": "newData.isNumber()"
            },
            "groups": {
              "$group_id": {
                "points": {
                  ".validate": "newData.isNumber()"
                },
                "pointsPossible": {
                  ".validate": "newData.isNumber()"
                },
                "questions": {
                  "$question_id": {
                    ".validate": "newData.isNumber()"
                  }
                }
              }
            }
          }
        }
      }
    },
    "fitTest": {
      ".read": true,
      ".write": false,
      "$group_id": {
        "order": {
          ".validate": "newData.isNumber()"
        },
        "title": {
          ".validate": "newData.isString()"
        },
        "questions": {
          "$question_id": {
            "order": {
              ".validate": "newData.isNumber()"
            },
            "title": {
              ".validate": "newData.isString()"
            },
            "link": {
              ".validate": "newData.isString()"
            },
            "scripture": {
              ".validate": "newData.isString()"
            }
          }
        }
      }
    }
  }
}
